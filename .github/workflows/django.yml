name: Django CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django-input-mask
          pip install gunicorn whitenoise
          pip install -r requirements.txt
      - name: Run migrations
        run: |
          python manage.py collectstatic  --noinput
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
      - name: Run Tests
        run: |
          python manage.py test
      # - name: Check Syntax #We are just testing the syntax in names app; pycodestyle uses pep8 conventions of max line length of 79 characters while Django recommends 119 characters
      #   run: pycodestyle --statistics names
  #Before deploy job you would usually have the build job in case you are using docker images
  deploy-docker-hub-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPO}}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPO}}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPO}}:buildcache,mode=max

  # deploy-dev:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #         heroku_email: ${{secrets.HEROKU_EMAIL}}
  #     - name: Deployed successfully
  #       run: echo Deployed!!
